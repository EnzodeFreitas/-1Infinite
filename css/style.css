@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@100;300;400;800&display=swap"); /* Poppins */
@import url('https://fonts.cdnfonts.com/css/ica-rubrik-black'); /* ICA Rubrick Black */

* 
{
    margin: 0;
    padding: 0;
    font-family: 'Poppins', sans-serif;
    box-sizing: border-box;
}

*, 
*::before, 
*::after 
{
    padding: 0;
    margin: 0;
    box-sizing: border-box;    
}

.logo 
{
    width: 100px;
}

header 
{
    position: absolute;
    top: 0;
    left: 0;
    z-index: 10;
    width: 100%;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1); /* Opacidade */
    background-color: transparent;
}

header nav
{
    max-width: 1400px;
    margin: 0 auto; /* Centraliza dentro do header */
    padding: 0 2rem; /* 0 para cima e embaixo e 2rem aos lados */
    display: flex;
    justify-content: space-between;
    align-items: center;
    
}

header ul 
{
    display: flex;
    list-style: none;
    align-items: center;
}

header ul a
{
    text-decoration: none;
    color: #fff;
    padding: 0 1.5rem;
    text-transform: uppercase; /* Transforma em maiúsculo */
    font-weight: 300; /* Espessura */
    font-size: 0.83rem; /* Tamanho */
}

.pesquisa a
{
    font-size: 1.05rem;
    padding: 0 3rem;
}

.hamburguer
{
    padding-left: 1.5rem;
}

.hamburguer a
{
    padding: 0; /* Removendo o padding para que a forma não fique em elipse */
    width: 37px;
    height: 37px;
    display: flex;
    border-radius: 50%; /* Transforma em círculo */
    background-color: rgba(115, 115, 115, 0.7);
    backdrop-filter: blur(10px); /* Efeito de desfoque no fundo; px define a intensidade */
    -webkit-backdrop-filter: blur(10px); /* Garante compatibilidade com os navegadores baseados em WebKit */
    justify-content: center; /* Irá auxiliar a estilização da classe .bar, assim como align-items */
    align-items: center;
}

.hamburguer .bar 
{
    position: relative;
    width: 52%;
    height: 1.3px;
    background-color: #fff;
    border-radius: 2px;
}

.hamburguer .bar::before, 
.hamburguer .bar::after 
{
    content: "";
    position: absolute;
    left: 50%;
    transform: translateX(-50%); /* Alinhar ao meio do eixo X*/
    width: 60%;
    height: 50%;
    background-color: inherit;
    border-radius: 2px;
    
}

.hamburguer .bar::before
{
    top: -4.5px; /*Para ficar encima */
}

.hamburguer .bar::after
{
    top: 4.5px; /* Oposto do before */
}

body 
{
    background: #0a2a43;
    min-height: 15000px;  /* Bastante altura pra que o scroll e o efeito parallax funcionem */
}

.s-initial
{
    position: relative; /* as imgs com 'position: absolute;' vão usar essa section como referência de posição. */
    width: 100%;
    height: 100vh; 
    overflow: hidden; /* impede que elementos "vazem"  */
    display: flex;
    justify-content: center;
    align-items: center;
}

.s-initial:before /* pseudoelemento, irá aparecer antes do conteúdo da section*/
{
    content: ''; /*Ativa o elemento para poder aplicar estilos nele. Sem isso, nada aparece. */ 
    position: absolute; /*Fora do fluxo do layout */ 
    bottom: 0; /* Para que fique na parte debaixo da section*/
    width: 100%;
    height: 100px;
    background: linear-gradient(to top, #0a2a43, transparent);
    z-index: 10000; /*Coloca a camada acima de tudo */
}

.s-initial:after
{
    content: '';
    position: absolute;
    top: 0; /* Define que começará no topo */ 
    left: 0; /* Define que começará à esquerda */ 
    width: 100%;
    height: 100%;
    background: #0a2a43;
    z-index: 10000; /* Mesma camada que o before*/
    mix-blend-mode: color; /* Mistura a cor com os elementos*/
}

.s-initial img 
{
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover; /* Redimensiona para cobrir toda a área, mantendo a proporção. */
  pointer-events: none;  /* Não impedirá a interação com outros elementos abaixo dela. */
}

#texto
{
    position: relative;
    color: #fff;
    font-size: 8vw;
    z-index: 1;
}

#estrada
{
    z-index: 2;
}

.s-tasks img
{
    width: 50px;
    height: 50px;
    display: block;
    max-width: 100%;
}

.s-hero
{
    width: 100%;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    h1 {
        display: flex; /* span é inline por default. Por isso temos que mudar isso para que o efeito das letras apareça */
        span {
            color: #fff;
            font-size: 6rem;
        }
    }
}

.s-hero .conteudo
{
    display: flex;
    width: 40%;
    justify-content: end;
}

.s-tasks
{
    position: relative; /* Para poder mexer na position da img */
    width: 100%;
    height: 100vh;
    background: #263140;
    display: flex;
    align-items: center;
    justify-content: center;
    img {
        position: absolute;
        &.html { /* & significa o seletor-pai (s-tasks) */
            top: 15%;
            left: 20%;
        }
        &.css  {
            top: 10%;
            right: 20%;
        }
        &.js {
            bottom: 15%;
            left: 25%;
        }
    }
    h1 {
        color: #fff;
        font-size: 6rem;
    }
}



.banner
{
    width: 100%;
    height: 100vh;
    text-align: center;
    overflow: hidden; /* Corta os elementos que 'escapam' */
    position: relative;
}

.banner .slider
{
    position: absolute; /* Move com precisão em relação ao elemento pai (banner) */
    width: 200px;
    height: 250px;
    top: 10%;
    left: calc(50% - 100px); /* Para centralizar (100px equivale a metade de width) */
    transform-style: preserve-3d; /* 3 dimensões, dando efeito 3D.
    Em CSS, podemos mover um elemento em 2 direções, tanto no eixo X como Y; entretanto, também podemos dar
    profundidade a eles: eixo Z */
    transform: perspective(1000px); /* Distância em relação Z do elemento */
    animation: autoRun 20s linear infinite; /* 20s para terminar o ciclo; linear: velocidade constante do início ao fim;
    infinite: animação entra em loop*/
    z-index: 2;
}

@keyframes autoRun
{
    from{
        transform: perspective(1000px) rotateX(-16deg) rotateY(0deg); /* Início da animação */
    }to{ /* fim da animação */
        transform: perspective(1000px) rotateX(-16deg) rotateY(360deg); /* tanto X como Y, traz a visualização de seus ângulos.
        Sinal - para visualização mais acima  */
    }
}

.banner .slider .item
{
    position: absolute; /* Para fixar */
    inset: 0 0 0 0; /* Shortand para top, rigth, bottom e left. Isso resultará tamanho e posição como a classe slider */
    transform: 
    rotateY(calc( (var(--position) - 1) * (360 / var(--quantity)) * 1deg)) /*rotateY: Gira cada item em torno do eixo;
    (position - 1): identifica a posição atual do item (começando em 0);  (360 / quantity): divide a circunferência de 360° de
    forma igual para os itens; *1deg: faz funcionar o rotateY, declarando a unidade em graus e garantindo que o resultado também seja. */
    translateZ(550px); /* Para formar a circunferência */

}

.banner .slider .item img
{
    width: 100%; /* Igual ao .item */
    height: 100%; /* Também igual ao .item */
    border-radius: 20px;
    object-fit: cover; /* Evitar distorção (preenche completamente o contêiner) */
    
}

.banner .content
{
    position: absolute; /* Para fixar no banner sem afetar o slider */
    bottom: 0;
    left: 50%; /* Posiciona no centro do elemento pai (banner) */
    transform: translateX(-50%); /* Fará o elemento deslocar 50% dele mesmo para a esquerda */
    width: min(1400px, 100vw); /* Telas > 1400px: elemento = 1400px; Telas < 1400px: 100% da largura da tela */
    height: max-content; /* Ajuste ao conteúdo */
    padding-bottom: 100px; /* Distância extra */
    display: flex;
    flex-wrap: wrap;    /* Quebrar linha se preciso */
    justify-content: space-between;
    align-items: center;
    z-index: 1;
}

.banner .content h1
{
    font-family: 'ICA Rubrik', sans-serif;
    font-size: 16em;
    line-height: 1em;
    color: #25283B;
    position: relative;
}

.banner .content h1::after
{
    position: absolute;
    inset: 0 0 0 0;  /* mesma posição que h1 */
    content: attr(data-content);  /* Declarando o conteúdo */
    z-index: 2;
    -webkit-text-stroke: 2px #d2d2d2;  /* Borda */
    color: transparent;
}

.banner .content .descricao 
{
    font-family: 'Poppins', sans-serif;
    text-align: right;
    max-width: 300px;
}

.banner .content h2
{
    font-size: 3em;
}

/*
.banner .content .model
{
    width: 100%;
    height: 75vh;
    position: absolute;
    bottom: 0;
    left: 0;
    background-size: auto 130%; 
    background-repeat: no-repeat; 
    background-position: top center; 
    z-index: 1;

    background-size _ _ = largura altura. Então largura será automática e altura ultrapassára a do elemento pai .content
    background-repeat: no-repeat; 
}
*/